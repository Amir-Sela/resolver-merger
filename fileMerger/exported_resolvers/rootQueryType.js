const {dummyResolver} = require("../utils");
const {
    getClassificationResolver
} = require('../resolvers/classificationResolver')
module.exports = {
    rootQueryType: {
        newsItem:dummyResolver,
        classificationEnumId: getClassificationResolver,
        enums:dummyResolver,
        permissions:dummyResolver,
        search:dummyResolver,
        kardex_search:dummyResolver,
        users:dummyResolver,
        orgTree:dummyResolver,
        remarks:dummyResolver,
        history:dummyResolver,
        entities:dummyResolver,
        links:dummyResolver,
        newsBox:dummyResolver,
        tags:dummyResolver,
        report:dummyResolver,
        workflow:dummyResolver,
        pir:dummyResolver,
        cases:dummyResolver,
        dashboard:dummyResolver,
        userPref:dummyResolver,
        logs:dummyResolver,
        entityMark:dummyResolver,
        order:dummyResolver,
        visualization:dummyResolver,
        label:dummyResolver,
        importCase:dummyResolver,
        lock:dummyResolver,
        contentManagement:dummyResolver,
        telephony:dummyResolver,
        alerts:dummyResolver,
        pmSearch:dummyResolver,
        biDashboard:dummyResolver,
        investigation:dummyResolver,
        organizer:dummyResolver,
        investigationTemplate:dummyResolver,
        investigationNotifications:dummyResolver,
        namedEntityRecognitionService:dummyResolver,
        textExtractionService:dummyResolver,
        wordCloud:dummyResolver,
        investigationLog:dummyResolver,
        lpr:dummyResolver,
        synopsis:dummyResolver,
        stt:dummyResolver,
        faceRecognition:dummyResolver,
        enrichmentsFlow:dummyResolver,
        taskManager:dummyResolver,
        chatbotChecklist:dummyResolver,
        nerClassificationConf:dummyResolver,
        sttNamedEntityRecognitionService:dummyResolver,
        dataLakeSearch:dummyResolver,
        vconnector:dummyResolver,
        webint:dummyResolver,
        corona:dummyResolver,
        presence:dummyResolver,
        config:dummyResolver,
        coronaDashboard:dummyResolver,
        regionalHealthStatus:dummyResolver,
        genericMaps:dummyResolver,
        genericCharts:dummyResolver,
        genericData:dummyResolver,
        coronaRecommendationPolicy:dummyResolver,
        queries:dummyResolver,
        workingData:dummyResolver

    }
}